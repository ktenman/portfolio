name: Build & Test

on:
  push:
  pull_request:

env:
  DOCKER_IMAGE_NAME_BACKEND: ktenman/portfolio-be
  DOCKER_IMAGE_NAME_FRONTEND: ktenman/portfolio-fe
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  lint-and-format:
    name: ðŸ§¹ Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Check Prettier formatting
        run: npm run format:check

  build_and_push:
    name: ðŸ”¨ Build and push
#    needs: [ test ]
    if: github.ref == 'refs/heads/main' && github.event_name != 'repository_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [ 'backend', 'frontend' ]
    steps:
      - uses: actions/checkout@v4.1.2
        with:
          fetch-depth: 1
      - uses: docker/setup-buildx-action@v3.4.0
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          platforms: linux/amd64, linux/arm64/v8
          context: .
          file: Dockerfile.${{ matrix.type }}
          push: true
          tags: ${{ matrix.type == 'backend' && env.DOCKER_IMAGE_NAME_BACKEND || env.DOCKER_IMAGE_NAME_FRONTEND }}:latest

  test:
    name: ðŸ§ª Test with Gradle
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [ 'unit', 'e2e' ]
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Docker Compose (for E2E tests)
        if: matrix.test-type == 'e2e'
        run: docker-compose -f docker-compose.yml build
      - name: Start services with Docker Compose (for E2E tests)
        if: matrix.test-type == 'e2e'
        run: docker-compose -f docker-compose.e2e.yml up -d
      - name: Set CI environment variable
        run: echo "E2E=${{ matrix.test-type == 'e2e' }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.4.2
      - name: Run Gradle test
        run: ./gradlew test --info -x bootJar -Dselenide.reportsFolder=build/reports/selenide ${{ matrix.test-type == 'e2e' && '-Pheadless=true' || '' }}
      - uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: ${{ format('Test reports and screenshots ({0})', matrix.test-type) }}
          path: |
            build/reports/tests
            build/reports/selenide

  auto-merge-dependabot:
    name: ðŸ¤– Auto merge dependabot PR
    needs: [ test ]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ðŸ¤–Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.10.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
          merge-method: rebase
