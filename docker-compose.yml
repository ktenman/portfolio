services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_v16_local:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d portfolio" ]
      interval: 3s
      timeout: 1s
      retries: 5
    restart: always
    ports:
      - '5432:5432'

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data_local:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 3s
      timeout: 1s
      retries: 5
    restart: always

  backend:
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portfolio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - postgres
      - redis
    restart: always
    mem_limit: 1024m

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend
    restart: always

  app:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    restart: always

volumes:
  postgres_data_v16_local:
  redis_data_local:
