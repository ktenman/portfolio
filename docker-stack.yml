version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "/usr/local/bin/healthcheck.sh" ]
      interval: 3s
      timeout: 1s
      retries: 5
    ports:
      - '5432:5432'
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 3s
      timeout: 1s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure

  backend:
    image: ktenman/portfolio-be:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portfolio
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          memory: 1024M
      restart_policy:
        condition: on-failure
    ports:
      - '8080:8080'

  frontend:
    image: ktenman/portfolio-fe:latest
    depends_on:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  app:
    image: caddy:2.8-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
