[versions]
kotlin = "2.2.20"
springBoot = "3.5.6"
springCloud = "2025.0.0"
springDependencyManagement = "1.1.7"
springDoc = "2.8.13"
springRetry = "2.0.12"
ktlint = "1.5.0"
ktlintPlugin = "13.1.0"
selenide = "7.11.1"
resilience4j = "2.3.0"
guava = "33.5.0-jre"
commonsMath = "3.6.1"
commonsFileupload = "1.6.0"
commonsLang3 = "3.19.0"
jsoup = "1.21.2"
telegramBots = "6.9.7.1"
googleCloudVision = "3.73.0"
coroutines = "1.10.2"
mockk = "1.13.14"
archUnit = "1.4.1"
atrium = "1.3.0-alpha-2"
postgresql = "42.7.8"

[libraries]
# Spring Boot
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }

# Spring Cloud
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloud" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-starter-contract-stub-runner = { module = "org.springframework.cloud:spring-cloud-starter-contract-stub-runner" }

# Spring Retry
spring-retry = { module = "org.springframework.retry:spring-retry", version.ref = "springRetry" }

# SpringDoc OpenAPI
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springDoc" }

# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# Database
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway-core = { module = "org.flywaydb:flyway-core" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql" }

# Resilience4j
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-retry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "resilience4j" }
resilience4j-kotlin = { module = "io.github.resilience4j:resilience4j-kotlin", version.ref = "resilience4j" }

# Monitoring
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }

# Utilities
guava = { module = "com.google.guava:guava", version.ref = "guava" }
commons-math3 = { module = "org.apache.commons:commons-math3", version.ref = "commonsMath" }
commons-fileupload = { module = "commons-fileupload:commons-fileupload", version.ref = "commonsFileupload" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# Selenium
selenide = { module = "com.codeborne:selenide", version.ref = "selenide" }

# Telegram
telegrambots = { module = "org.telegram:telegrambots", version.ref = "telegramBots" }
telegrambots-spring-boot-starter = { module = "org.telegram:telegrambots-spring-boot-starter", version.ref = "telegramBots" }

# Google Cloud
google-cloud-vision = { module = "com.google.cloud:google-cloud-vision", version.ref = "googleCloudVision" }

# Testing
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
spring-mockk = { module = "com.ninja-squad:springmockk", version = "4.0.2" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archUnit" }
atrium-fluent = { module = "ch.tutteli.atrium:atrium-fluent", version.ref = "atrium" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPlugin" }
